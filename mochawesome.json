{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-01-20T14:41:13.946Z",
    "end": "2025-01-20T14:41:20.560Z",
    "duration": 6614
  },
  "results": [
    {
      "uuid": "2bb72629-ec0b-4567-9fe5-65112a6bdd84",
      "title": "",
      "fullFile": "cypress/e2e/firstTest.spec.js",
      "file": "cypress/e2e/firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0324ff1c-7df8-4d3b-bfe4-653e1f9e9695",
          "title": "test backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "test backend verify correct request and response",
              "timedOut": null,
              "duration": 3905,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first post an article then intercept the post requst\n// cy.intercept('POST', '**/articles', (req)=>{\n//     req.body.article.description = \"This is a description 2\"\n// }).as('postArticle')\n// here we are intercepting the post request to check the request and the response of the request\"\n// you must intercept before performing the action, sequence is: first intercept, then action, then assertions. \ncy.intercept('POST', '**/articles', req => {\n  // req.body.article.description = \"This is a description 2\";\n  req.reply(res => {\n    console.log(res);\n    // expect(res.body.article.description).to.equal(\"This is a description\")\n    // res.body.article.description = \"This is a description 2\";\n  });\n}).as('postArticles');\ncy.contains('a', 'New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('this is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a description 2');\ncy.get('[formcontrolname=\"body\"]').type('this is a body');\ncy.get('[placeholder=\"Enter tags\"]').type('this is a tag');\ncy.get('button').contains('Publish Article').click();\ncy.wait('@postArticles').then(xhr => {\n  expect(xhr.response.statusCode).to.equal(201);\n  console.log(xhr);\n  expect(xhr.request.body.article.body).to.equal('this is a body');\n  expect(xhr.response.body.article.description).to.equal('This is a description 2');\n  expect(xhr.request.body.article.tagList[0]).to.equal('this is a tag');\n  expect(xhr.request.body.article.title).to.equal('this is a title');\n  // expect(xhr.response)\n});\ncy.get('[class=\"navbar-brand\"]').click();\ncy.contains('Global Feed').click();\ncy.get('app-article-preview').first().click();\ncy.get('app-article-meta button').contains('Delete').click();",
              "err": {},
              "uuid": "b4cb1e73-e959-47b0-a00d-c5d2f85a720b",
              "parentUUID": "0324ff1c-7df8-4d3b-bfe4-653e1f9e9695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify popular tags are displayed",
              "fullTitle": "test backend verify popular tags are displayed",
              "timedOut": null,
              "duration": 440,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log('we logged in');\ncy.get('[class=\"tag-list\"]').should('contain', 'Cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "648fbd83-6f37-4469-88ae-f3456a5e9bf8",
              "parentUUID": "0324ff1c-7df8-4d3b-bfe4-653e1f9e9695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "testing like article display",
              "fullTitle": "test backend testing like article display",
              "timedOut": null,
              "duration": 580,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', `${Cypress.env('apiURL')}/api/articles/feed*`, {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', `${Cypress.env('apiURL')}/api/articles*`, {\n  fixture: 'articles.json'\n});\n//   // one way of testing button\n// cy.get('app-article-preview').then(article=>{\n//  cy.wrap(article).first().find('button').should('contain', 3)\n// cy.wrap(article[1]).find('button').should('contain', 5)\n// })\ncy.get('app-article-list button').then(buttonList => {\n  expect(buttonList[0]).to.contain('3');\n  expect(buttonList[1]).to.contain('5');\n});\n//   // second way of testing \n//   // cy.get('app-article-preview button').then(button=>{\n//   //   cy.wrap(button[0]).should('contain', '2')\n//   //   cy.wrap(button[1]).should('contain', '5')\n//   // })\n// // third way to test like count\n// cy.get('app-article-preview button').then(likeCount=> {\n//   expect(likeCount[0]).to.contain(3)\n//   expect(likeCount[1]).to.contain(5)\n// })\n// // cy.get('app-article-preview button').then(likeCount=>{\n// //   cy.wrap(likeCount[0]).click()\n// //   cy.wrap(likeCount[1]).click()\n// // })\ncy.fixture('articles.json').then(file => {\n  const articleLink = file.articles[1].slug;\n  console.log(articleLink);\n  file.articles[1].favoritesCount = 6;\n  cy.intercept('POST', `${Cypress.env('apiURL')}/api/articles/` + articleLink + '/favorite', file).as('art');\n});\ncy.get('app-article-preview button').eq(1).click().should('contain', '6');",
              "err": {},
              "uuid": "bdb5ca53-d49a-4c9d-8428-1d5d07955995",
              "parentUUID": "0324ff1c-7df8-4d3b-bfe4-653e1f9e9695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "test backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 1614,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const articleBody = {\n  article: {\n    title: \"from api\",\n    description: \"kkk\",\n    body: \"kk\",\n    tagList: [\"kk\"]\n  }\n};\ncy.get('@token').then(token => {\n  cy.request({\n    url: `${Cypress.env('apiURL')}/api/articles/`,\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: articleBody\n  }).then(resp => {\n    expect(resp.status).to.equal(201);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('app-article-preview').first().click();\n  cy.get('app-article-meta button').contains('Delete').click();\n  cy.request({\n    url: `${Cypress.env('apiURL')}/api/articles/`,\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(response => {\n    console.log(response);\n    expect(response.articles[0].title).to.not.equal('from api');\n  });\n});",
              "err": {},
              "uuid": "2e9317f8-69ce-4edf-a68a-6a7a243c1d69",
              "parentUUID": "0324ff1c-7df8-4d3b-bfe4-653e1f9e9695",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4cb1e73-e959-47b0-a00d-c5d2f85a720b",
            "648fbd83-6f37-4469-88ae-f3456a5e9bf8",
            "bdb5ca53-d49a-4c9d-8428-1d5d07955995",
            "2e9317f8-69ce-4edf-a68a-6a7a243c1d69"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6539,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}